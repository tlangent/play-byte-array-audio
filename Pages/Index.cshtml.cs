using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Mvc.RazorPages;
using Microsoft.Extensions.Primitives;
using System.Text;

namespace WebApplication8.Pages
{
    public class IndexModel : PageModel
    {
        private readonly ILogger<IndexModel> _logger;

        public IndexModel(ILogger<IndexModel> logger)
        {
            _logger = logger;
        }
        public string Base64AudioData { get; set; }

        public string ContentType { get; set; }

        public void OnGet()
        {
            byte[] audioData = GetYourAudioByteArray();
            Base64AudioData = Convert.ToBase64String(audioData);
            ContentType = "audio/mp3"; // Set the correct content type based on your audio format
        }

        private byte[] GetYourAudioByteArray()
        {

            string hexString = "FFF344C40012000DE0001806000000404010FC1F07C1F07C10040100401307C1F07C1F04031F07C1F0401039AC1F07C1F04010043FE270701004010EB07C1C04010FFE08021F89C100401004013C4E0F82008020186153A231191AEAAB5296BDFFF344C40B101859EC01491800ED3DA7399641505448080A32830622307F8B8B8BB52FE60C73060C0D14668008B8BA0DFFE0A82A12FA0C18090A7AC4A0A8B33FAB82AA2FBB6C51DAB50F966487A9DFEB3773F9FDFA587C1BAABE3A75C8219940FFF344C41D1849E61001991801178F61B7FB410B4C4956F7054BA8FE3A0015CFB48FCC8907861367DF3CD2BB94E2A9EF133571F7E9A9FA758D0BC38223EBBD28CE06578D331FE550F1394C5FEC5CE07D07555A97605721A71A72DFFA938CD90CFFF344C40E1411D68001993800F7DCF3894AAAE5D180803C2BEF73C4430682AFF6A98373FFFBC7C7D06858A7F3DDBCE1E2A3A51CEFFEFF307478E3E38B67FF2A231C1F0B84CEFFF4F2E7982C501C0415A5E4CB4422B865C340F50C3BD0DB010FFFF344C4101689829001DA800093C0BCC6EA20D2889DC1506678232F8D3900C00E0B2C95A8A02D07D5498E612C7DD134651B29A92CE6EE9DDD6B65AD6AA674EA0B5AD3372FAFBADD5BFBB2935A6A30350ABD1F59F22606AAFEE748674E340B54FFF344C40813D9869C00D50E944587E6B48B36805348C0E812B05F2A03506060C58F441C71024A85445C0502040B1438CC50243965F527EDDFA7FDF534F30F2C139363FEFD5DF1E2064B0F830207374B0E0A0D5D159CFB8D940905C79438659DFFF344C40B15318E9C00D64E943F201D7CEDA5104B89EA8C34860732967042A1A21BBD278D03868DD24E5771FFF95E7B9FFACFFFF7FCCE73687BEA4E942B34210A46D43DAACED34A2D07C503551A96346829AAD5079A6D8FDAAAFB18A549054BFFF344C40914A9929C00D60A94304008EC2C5FBF290B0023910882A802E326657B71C1169D486A1A2AB81F39EAD7DE1BF8E3B8CDBFFD5AFFFD5FEBD86F536CC1A6164111652B11FBF36D2B55439420B0B8557BD6484D529DD66FA19320F012FBFFF344C40911018A9C00CCC4940A0E7CFB14BCF090BC1574812870041705B274B86A06758760782183E000505636591A546CE15BAFFEDEFB97B2663800BB2793DFCB68F1A16FA1ABBB4F59E1302D548D0575886A2334DB6FEB1F17A6CDA96300FFF344C4181139929C00D64494DC59AD4AEFF98CAA9F9B9428B045B2CDDC9B83B7FA8E6BFFF5FFFFCF6E4A665EDC395B3FFFD56E6391283F9C21FCBED0435ABF26139C19783AFCB42EF82DA9FAF89802A7963799F986142E572A54E1A3D9C626FFF344C42610710EA800C64E70C0E7B8DC36DCDEFCC6E679E69F1C1A964009E43F2828D114566FF429C7BF501A4B5FA6422EE9752BEC028911AF759002ECFD5EAE9FEE2D999A600085859D0A21AC60F1DC0017F06FC8DFD2FE2EB91723970682FFF344C43711E91AB000C610707172C3B101A67BB1F108B8181553BFD94ABEF9E801CC4C36819C1FCE9AD1BC1673AD6599A1B3AD3B2B5CF0D775B650F6DB80D2ADA0474C3C040D241B87E6A4E4EEF0D1D7FCAA241C60C11107187243FBE2F0FFFFF344C44210D116B4007E5070FA2AA6F292112DF5C00AB3E49803A0D4B7E94AC16DD578E1EFD4C3BB67584097F1E95C9AB6E0B959E85E357E03F73F1CBF6BFBD0AF82D4384075CBB1086BFE878A3DBFFB13C7FEBA04F3CD0F2A58A314939C28FFF344C45110B912BC007E1870F712DBBA44754F86C8B6DAE0E97586B573D54864AAA3C0352CF363F7D38B56BF9ED76C59AC0702F35812275315CF0108ABF1E1C43529FE295215B3FEFA2517660740DE54A5029918E6AD0C44B564341DEA463FFFF344C46111D112B400C3D8708CB1CDF3037E9F5680AB31985938AE1DDB4657A82743040784CD385C99105087D26D49F645A285C38838B4FE705D6AD6370800EB6A3E172C0BD53A3A1D1952F81934CA411B6ED91B7953C6F861A6F5EFB73D37FFF344C46C11D91EB000C3D2705F59B9C9D2A840B96612586E7D00083BE2E0202EF666206836044FF8469242E49DAB58028AA5FC0540CD378830166849443F3258D0264225D439CF29642C9EAC98974FF6E5BD5F7F2B98DBD198855E73D11F18FFF344C47712210AAC00C3D870DC42E2B58F67F986BB987010A0513FD762C8889BF9649A9DBF111532BD7B122433288EA7E0B8A9FACFF86A4D00B8A29189416E3EB58BC69A79D42E89FCF22A935F0B8982206C181407A806D8CB362207B291D1FFF344C481114106A800C35E703C1EC74D49628A4B576FBBB54B6AD2CC16A594142723973EC40C66AFFFFFFD75AF946C20154740CCCE3795FB3E14107FE877487500B0343E8F0F63105664395F68E475445B49DEAAA9F6C4A89D7C3A8DC3AC60FFF344C48F16D99A9C00D35A948270CA7E904B622B6629A56C5DFD6BFFFFDFF5FFDB5AF8F88D985AB6B12C54884C80A79EF5BBFFFFFFF78BAA7D2CDE257CB91802449C40ECB5B63061C23B39734DEC9F776139F6832BFBB37797544F1133C43BFFF344C4861789A69400CA1E94945D727774B4A6C104749410E074769D4153A71656CD0A1CF3F7CFFFFFD7D7FFC6FBCE399E4A14606E959928C76469799579B53E701A03071AD6084970430D3C2D00041E0A86C6E0E21983089709C1892A707BFFF344C47A13319E8C015A5800D04090314D3524BA0B45229294819B7C62813501263042643B4BD0AD290C289F54BD65E3451C51B226C512D3640EA3AFCF9517CCCD5275A4997189144DBD575FFBA693A4A6DD6EC827764D7FFFF554B353C71BFFF344C48021EAE27C019A6801F775A913548E3065CD9488921282E930E51642276A32C098934296E3CC6AE5DB5BDFEFFCED7FFDBA59DADCE1B1251303A2A30372C446CA72115430E75D74EFDBFC9577CF3272BFF25BFD89FBBFDAF5AAC3185EFFF344C44B11C99E1C01D838009903895C24C49AB2CC9E0D6CC6656436A57F7F652ABFFF1B52D997635526B651306828783A0A9676B3A59047EB3BC8E1A9182A30047894A9DC92255DD186BCAF86AA2B2BBFEE94269AAAAAAAE9128AFFA09A68FFF344C45611110E0000794670AA27D54CA889574D34D354459FFEA83554D3F4D152C134D5F5555D225DFFA09A68AAAAAAA61AAEFFFA69AAAFFFB6D8AADFFDA2AA4C414D45332E39392E35AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4C414D45332EFFF344C464112001300008C67139392E35AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4C414D45332EFFF344C472000003480000000039392E35AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4C414D45332EFFF344C4AC000003480000000039392E35AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4C414D45332EFFF344C4AC000003480000000039392E35AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4C414D45332EFFF344C4AC000003480000000039392E35AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4C414D45332EFFF344C4AC000003480000000039392E35AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFFF344C4AC0000034800000000AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFFF344C4AC0000034800000000AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";

            byte[] byteArray = Enumerable.Range(0, hexString.Length)
                              .Where(x => x % 2 == 0)
                              .Select(x => Convert.ToByte(hexString.Substring(x, 2), 16))
                              .ToArray();

            return byteArray;
        }
    }
}